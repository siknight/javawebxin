1.编程题
  使用两种方式启动线程，在run()方法打印1 ~ 19之间的整数。

作业：
---------------------------------------------------------------------------------
今天内容：
   (1)线程类的常用方法
   (2)线程的同步机制
   (3)网络编程的常识
   (4)基于tcp协议的编程模型

1.线程类的常用方法
  int getPriority() - 用于获取线程对象的优先级。
  void setPriority(int newPriority) - 用于更改线程的优先级。
      - 优先级越高的线程表示获取时间片的机会越多，但并不保证该线程一定先执行。
  
2.线程的同步机制(重点)
复习：
  StringBuilder类 - 该类是非线程安全的类，效率比较高，不支持线程的同步机制。
  StringBuffer类  - 该类是线程安全的类，效率比较低，支持线程的同步机制。

2.1 基本概念
  当多个线程在同一时刻访问同一种共享资源时，可能会引发冲突造成数据的不一致性，此时就需要进行线程之间的协调，而线程之间的协调和通信就叫做线程的同步机制。

2.2 解决方案
  有案例可知最终的结果并不是合理的结果，是因为线程一和线程二同时执行导致的。
  解决方案：将线程的并行改为串行即可。 
  若采用上述方法就会导致程序的效率比较低，因此建议能不用则不用。

2.3 实现方式
  在java语言中使用synchronized关键字来实现同步锁机制，来保证线程执行的原子性，具体方式如下：
  (1)使用synchronized关键字来修饰整个方法，表示锁定整个方法的所有代码。
  (2)使用同步语句块来锁定方法中的部分代码，语法格式如下：
      synchronized(this){
         编写需要锁定的代码块;
      }  

2.4 原理分析(尽量理解)
   当多个线程同时抢占共享资源时本质都是去抢占同步锁，当有一个线程抢到同步锁之后其他线程进入阻塞/等待状态，该线程可以安心地执行锁定的代码，当该线程执行完毕后自动释放对象锁，等待的线程又开始抢占同步锁，抢到的线程继续执行锁定的代码，抢不到的线程继续等待。

2.5 死锁的概念
线程一执行的代码：
   public void run(){
        synchronized(a){   //持有同步锁a，等待同步锁b
            synchronized(b){
                同步语句块代码；
            }
        }
   }

线程二执行的代码：
   public void run(){
        synchronized(b){   //持有同步锁b，等待同步锁a
            synchronized(a){
                同步语句块代码；
            }
        }
   }

注意：
   以后的开发中尽量不要使用同步语句块的嵌套使用。

2.6 Object类的常用方法
   void wait() - 用于让当前线程进入阻塞状态，直到其他线程调用notify()/notifyAll()。
   void wait(long timeout) - 用于让当前线程进入等待状态，直到其他线程调用notify()/notifyAll()方法，或者参数指定的时间已经过去了。
   void notify() - 用于唤醒等待的一个线程(随机唤醒一个)。
   void notifyAll() - 用于唤醒等待的所有线程。
   
3.网络编程的基本常识(记住)
  目前主流的网络通讯软件有：QQ、微信、MSN、飞信、阿里旺旺... ...

3.1 七层协议模型
  ISO(国际标准委员会组织)将数据的传递从逻辑上划分了以下七层：
      应用层、表示层、会话层、传输层、网络层、数据链路层、物理层。
  当发送消息时，需要按照上述从前向后的次序对发送的内容进行层层加包，然后再发送出去
  当接收消息时，需要按照上述相反的次序对接收到的内容层层拆包，然后再解析出来。

3.2 常见的协议
  http - 超文本传输协议，浏览网页时使用该协议。   
  ftp  - 文件传输协议，上传下载文件时使用该协议。
  tcp  - 传输控制协议，是一种面向连接的协议，类似于打电话，网络通信需要使用该协议。
  udp  - 用户数据报协议，是一种非面向连接的协议，类似于写信，网络通信使用该协议。
  ip   - 互联网协议，是上述协议的底层协议。

  协议 - 就是指一种约定/规则，是通信双方遵循的一种机制。

作业：
  1.理解和编写学生信息管理系统。
  
 
 
 
 




 
  
 
 
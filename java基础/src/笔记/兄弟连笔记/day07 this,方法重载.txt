1.简答题
  写出类定义、成员变量、成员方法、对象以及引用的语法格式。

2.编程题
  自定义Person类，属性有：姓名和年龄，要求在main()方法中创建对象并打印属性值，修改属性值为"zhangfei"和30，再次打印属性值。

作业：
----------------------------------------------------------------------------------
今天内容：
   (1)成员方法
   (2)构造方法和方法重载
   (3)this关键字
   (4)方法的传参和递归调用
   (5)封装
   (6)static关键字

1.成员方法(重中之重)
1.1 基本概念
  成员方法就是指写在类体中的方法，是对语句块的打包，使用成员方法可以提高代码的复用性以及可维护性。

1.2 语法格式
  class 类名{

      返回值类型 成员方法名(形参列表){
          方法体;
      }
  }
如：
  class Person{
      void show(){
          System.out.println("name = " + name + ",age = " + age);
      } 
  }

1.3 方法的详解
(1)返回值类型
   返回值就是指从方法体内向方法体外传递的数据内容。
   返回值类型就是指返回数据内容的类型。
   在方法体中使用return关键字实现数据内容的返回，如：return 66+1;         
   当方法体中没有任何返回的数据时，则返回值类型写void即可。

(2)形参列表
   形式参数就是指从方法体外向方法体内传入的数据内容。
   形参列表就是指多个形参组成的集合，语法格式是：数据类型 变量名1,数据类型 变量名2,
   当不需要向方法体中传入任何数据时，则形参列表啥也不写即可。

(3)方法体
   编写用于描述方法功能的语句块，如：return 1+1;

1.4 方法的调用
(1)语法格式
   引用名/对象.方法名(实参列表);
如：
   p.show();

(2)注意事项
   实参列表就是用于对形参列表进行赋值操作的，因此实参列表的个数、类型、顺序等必须和形参列表保持一致。
   实参可以传递字面值、变量名、表达式、方法的调用等。

练习：
  自定义Point类，属性有：横坐标和纵坐标，行为有：打印横纵坐标的方法、实现横坐标加上参数指定数值的方法；要求在main()方法中创建对象并打印默认初始值，调用横坐标加数值的方法更改横坐标，再次打印更改之后的结果。

2.构造方法和方法重载
如：
   Person p = new Person();
   p.show();

2.1 构造方法(重中之重)
(1)语法格式
   class 类名{
       类名(形参列表){
           构造方法体;
       }
   }
 
如：
   class Person{
       Person(){
           ... ...
       }
   } 

(2)注意事项
   a.构造方法的方法名与类名完全相同，而且没有返回值类型，连void都没有。
   b.当使用new关键字创建对象时，会自动调用构造方法来进行成员变量的初始化工作。
   c.构造方法可以通过new对象的方式去调用，不能使用引用.的方式手动调用。

(3)默认构造方法
   当一个类中没有自定义任何形式的构造方法时，则编译器会自动添加一个无参的空构造方法，该构造方法叫做默认/缺省构造方法，如：Person(){}。
   若类中出现自定义构造方法，则编译器不再提供任何形式的构造方法。

(4)经验的分享
   a.尽量不要对编译器提供的构造方法形成依赖，避免错误的发生。
   b.若类中有非常量的成员变量时，建议提供两个版本的构造方法，一个是无参的构造方法，     另外一个是全属性作为参数的构造方法。
   c.若类中没有成员变量，或者成员变量都是常量时，则建议不提供任何版本的构造方法。
   
练习：
   自定义Car类，属性有：品牌、颜色、轮胎数量；行为有：打印所有属性的方法，要求提供一个无参的构造方法和一个全属性做参数的构造方法；
   要求在main()方法中使用两种不同的方式构造两个对象，分别打印各自的属性。

2.2 方法的重载(重点)
(1)基本概念
   在同一个类中，方法名相同，方法的形参列表不同，这样的方法之间构成重载关系Overload   
(2)重载的主要形式
   目前重载的主要形式体现在：参数个数不同、参数类型不同、参数顺序不同。
   与形参变量名和返回值类型无关，但建议返回值类型最好相同。
   如： 
      System.out.println();  使用了重载的技术

   判断是否重载的核心： 考虑在调用阶段能否区分。

(3)重载的作用
   使用重载的意义在于：对于调用者来说，只需要记住一个方法名就可以调用不同的版本，
使用更加方便。

3.this关键字(重点、原理)
如：
   class A{}
   class B{
      void show(A a){
         .... ...
      }
   }

   A a = new A();
   B b = new B();
   b.show(a);
   其中b对象是用于调用方法的，因此叫做调用对象。
   其中a对象是用于作为参数传递的，因此叫做参数对象。
   
3.1 基本概念
   对于构造方法来说，this就是指当前正在构造的对象。
   对于成员方法来说，this就是指当前正在调用的对象。

原理分析：
   当使用不同的引用/对象调用同一个方法时，在方法内部this代表当前正在调用的对象，因为调用对象的不同导致this的不同，那么访问成员变量时带来的结果也不同。
   在方法体中使用成员变量时，默认会加上this.的方式访问，this.相当于汉语"我的"。

3.2 使用方式
  (1)当形参变量名和成员变量名同名时，在方法体中会优先选择形参变量名，若希望使用
     成员变量名，则需要在变量名的前面加上this.，表示明确要求使用成员变量(掌握)。
  (2)可以使用this.的方式访问成员变量，也可以调用成员方法(了解)。
  (3)可以在构造方法的第一行使用this(实参)的方式来调用本类中其他构造方法(了解)。     

要求大家记住的异常类型：
   算数异常、数组下标越界异常、空指针异常。

作业：
   1.要求理解所有代码，所有非测试类的代码至少敲5遍。
   2.自定义Girl类，属性有：姓名、年龄、以及是否有男朋友，行为有：打印所有属性值，
要求提供两个版本的构造方法，在main()方法中分别使用两种方式去创建对象，并打印属性
信息。







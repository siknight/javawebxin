1.简答题
  写出for循环和双重for循环的语法格式以及执行流程。

2.编程题
  使用双重for循环打印九九乘法表。

作业：
----------------------------------------------------------------------------------
今天内容：
   (1)二维数组
   (2)面向对象编程的概念
   (3)类、对象以及引用
   (4)成员方法
   (5)构造方法和方法重载
   (6)this关键字

1.二维数组(熟悉)
1.1 基本概念
  一维数组 - 用于存放多个相同数据类型数据的一段连续内存空间。
  二维数组 - 就是指由一维数组组成的数组，也就是说，数组中的每一个元素都是一维数组。

1.2 声明方式
(1)语法格式
   数据类型[][] 数组变量名 = new 数据类型[行数][列数];
如：
   int[][] arr = new int[2][3];
   该数组的数组名为：arr，具有2行3列，行下标的范围是：0 ~ 1，列下标的范围是：0 ~ 2.

思考：
   arr表示什么？ arr[0]表示什么？  arr[0][0]表示什么？
解析：
   arr表示数组名，记录整个数组的首地址信息。
   arr[0]表示该数组中的第一行。
   arr[0][0]表示该数组中第一行第一列的元素，也就是第一个元素。

   arr.length表示该数组中的行数。
   arr[i].length表示该数组中当前行的元素个数，也就是当前行的列数。

(2)数组的初始化
   数据类型[][] 数组变量名 = {{初始值1,...},{初始值2,...}};
如：
   int[][] arr = {{1, 2, 3}, {4, 5, 6}};     
  
2.面向对象编程的概念(熟悉)
2.1 什么是对象？
   万物皆对象。

2.2 什么是面向对象？
   面向对象就是指以属性/特征和行为的观点去分析现实世界中事物的方式。

2.3 什么是面向对象编程？
   面向对象编程就是指以面向对象的观点进行分析，再用面向对象的编程语言进行翻译的过程
   其中C语言是一门面向过程的编程语言。
   其中C++语言是一门既面向过程又面向对象的编程语言。
   其中Java语言是一门纯面向对象的编程语言。

2.4 为什么需要面向对象编程？
   是软件产业化发展的需求。

2.5 如何学好面向对象编程？
   理解面向对象编程的三大特性：封装、继承、多态。

3.类、对象以及引用(重中之重)
学生类：
   属性/特性：学号、姓名、年龄
   行为：学习、吃饭、娱乐
教师类：
   属性/特性：工号、姓名、年龄
   行为：讲课、吃饭、娱乐   
... ...
3.1 类的基本概念
   类就是“分类”的意思，是多个对象共性的提取和描述，是一个抽象的概念。
   类是一种引用数据类型，里面包含了用于描述特征的成员变量，和用于描述行为的成员方法
   类是创建对象的模板，而对象是客观存在的实体，对象可以代表一块内存空间。

3.2 类的定义
(1)类定义的语法格式
   class 类名{
   }
如：
   class Person{
   }

注意：
   一般情况下，当类名由多个单词组成时，要求每个单词首字母都要大写。

(2)成员变量定义的语法格式
   class 类名{
      数据类型 成员变量名 = 初始值;  -其中=初始值可以省略，分号不可以省略
   }
如：
   class Person{
      String name; //用于描述姓名的成员变量
      int age;     //用于描述年龄的成员变量
   }

注意：
   一般情况下，当成员变量名由多个单词组成，从第二个单词起首字符大写。
补充：
   局部变量 - 当一个变量的声明在方法体中时，局部变量的生命周期为方法体内。
   成员变量 - 当一个变量的声明在方法体外但在类体中时，成员变量的生命周期为类体内。

3.3 对象的创建
(1)语法格式
   new 类名();  
如：
   new Person();  - 表示创建一个Person类的对象，叫做匿名对象。

(2)使用方式
   当使用new关键字创建一个对象后，会在内存空间的堆区拥有一片区域，用于存放该对象自己独有的成员变量，这个过程叫做类的实例化/构造对象/创建对象。
         
3.4 引用的声明
(1)语法格式
   类名 引用类型变量名(简称:引用);
如：
   Person p;

(2)使用方式
   当声明一个类类型的引用时，可以使用该引用来记录某个该类类型对象的地址信息，从而可以方便地访问该对象自己独有的成员变量信息。
   访问方式：引用名.成员变量名
如：
   Person p = new Person();
   p.name = "zhangfei";

4.成员方法(重中之重)
4.1 语法格式
  class 类名{
      返回值类型 成员方法名(形参列表){
          方法体;
      }
  }
如：
  class Person{
      //用于描述展示自我行为的成员方法
      void show(){
          System.out.println("我是" + name + "，今年" + age + "岁了！");
      }
  }

注意：
  一般情况下，当成员方法名由多个单词组成时，第二个单词起的每个单词首字母都要大写。

4.2 成员方法的详解
(1)返回值类型
   返回值就是指从方法体内向方法体外返回的数据内容。
   返回值类型就是指返回数据内容的数据类型。
       若从方法体内向方法体外返回66时，则返回值类型写 int即可。
       若从方法体内向方法体外返回"hello"时，则返回值类型写 String即可。
       若从方法体内写方法体外返回3.14时，则返回值类型写double即可。
   当该方法体内没有任何需要返回的数据内容时，则返回值类型写void即可。
   若需要返回数据，则使用return关键字，可以结束当前方法并返回数据内容。
       若返回66时，则方法体中编写：return 66;
       若返回3.14时，则方法体中编写：return 3.14;
       若返回num的数值，则方法体中编写：return num;
   使用return关键字可以返回字面值、变量名以及表达式等；

(2)形参列表
   形式参数就是指从方法体外向方法体内传入的数据内容，语法格式：数据类型 变量名。
   形参列表就是指多个形式参数的集合，格式为：数据类型 变量名1，数据类型 变量名2,...
       若希望向方法体内传入66时，则形参列表写为：int i。
       若希望向方法体内传入3.14时，则形参列表写为：double d。
       若希望向方法体内传入66和3.14时，则形参列表写为：int i, double d。
   当没有任何数据向方法体内传入时，则()内啥也不写即可。
  
(3)方法体
   方法体就是指在{}中编写的语句块，通常用于描述该方法的功能。
   方法通常用于实现语句块的打包，从而提高代码的复用性和可维护性。
  
4.3 方法的调用
   引用/对象.方法名(实际参数);
如：
   p.show();

作业：
   1.提示用户输入班级人数和所有学生的考试成绩，计算出该班级的总分、平均分以及最高分
并打印出来(使用一维数组实现)。
   2.理解面向对象的相关概念和代码。
   3.将Person.java的代码理解，并敲至少10遍。
   4.自定义Phone类，属性有：品牌，价格；行为有：打印品牌和价格的数值，要求在main()方法中创建对象并打印默认品牌和价格，将品牌和价格指定为"Nokia"和599，再次打印品牌
和价格。





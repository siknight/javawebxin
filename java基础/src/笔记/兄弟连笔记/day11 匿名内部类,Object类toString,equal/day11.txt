1.简答题
  简述抽象类和接口的主要区别(5条)。

2.编程题
  自定义账户类，属性有：账户余额，实现该类的封装。
  自定义定期账户类继承账户类，重写计算利息的方法，在main()方法中调用。

作业：
-----------------------------------------------------------------------------------
今天内容：
   (1)内部类
   (2)Object类
   (3)包装类和数学处理类
   (4)String类
   (5)StringBuilder类和StringBuffer类
   (6)日期相关的类

1.内部类(了解)
1.1 基本概念
   在java语言中可以将一个类的定义放在另外一个类的内部，其中放在类体内部的类叫做内部类，该类所在的类叫做外部类。
   在类的内部可以有：成员变量、成员方法、构造方法、构造块、静态语句块、内部类等。

1.2 语法格式
   class 类名{
      class 类名{
         内部类的类体；
      }
   }

1.3 基本作用
   当一个类专门为某个类提供服务时，可以将该类写在某个类的内部作为内部类来实现，这样带来的好处就是可以直接访问所在类的私有成员，而不再需要公有的get和set方法等。

1.4 基本分类
   普通内部类 - 直接将一个类的定义写在另外一个类的内部。
   静态内部类 - 使用static关键字修饰的内部类。
              - 只有内部类才可以使用static关键字修饰。
   局部内部类 - 直接将一个类的定义写在一个方法的方法体中
              - 局部内部类的生命周期就在方法体的内部。
   匿名内部类 - 没有名字的内部类，用于构造接口/父类类型的对象(重点)。

1.5 匿名内部类(重点)
(1)语法格式
   父类类型/接口类型 引用名 = new 父类类型/接口类型(){
               进行方法的重写;
           };

(2)经验分享
   当接口类型的引用作为方法的形参时，调用该方法传递的实参有两种形式：
       a.自定义类实现接口并重写抽象方法，实参传递该实现类的对象即可。
       b.使用匿名内部类的方式直接new接口类型的对象作为实参传递(首选该方式)。

2.Object类
2.1 常用的包
   java.lang包 - 该包是java中的核心包，该包中所有类等都是由java虚拟机自动加载/导入
               - 如：System类、String类、Object类等 
   java.util包 - 该包是java中的工具包，该包中提供大量的工具类以及集合类等。
               - 如：Scanner类、Random类等
   java.io包   - 该包是java中的输入输出包，该包中包含大量的输入输出类，实现文件读写
               - 如：FileInputStream类等
   java.net包  - 该包是java中的网络包，该包中提供大量的网络类，实现网络通信。
               - 如：ServerSocket类等
   ... ...

2.2 Object类(重点)
(1)基本概念
   java.lang.Object类是类层次结构中的顶层超类，也就是所有类的根类。   

(2)常用的方法 
   Object() - 无参的构造方法，可以让子类通过super()的方式调用该方法。
   boolean equals(Object obj) - 用于判断调用对象是否与参数对象相等。
      - 具有自反性、对称性、传递性、一致性、非空性。
      - 该方法默认比较两个对象的内存地址是否相等，效果等价于 ==。
   int hashCode() - 用于返回调用对象的哈希码值(内存地址的编号)。
      - 若调用对象调用equals()方法比较的内容没有更改，则该方法的返回值保持一致。
      - 若调用equals()方法判断两个对象相等，则各自调用hashCode()的数值必须相等。 
      - 若调用equals()方法判断两个对象不相等，则各自调用hashCode()的数值可能相等，
        但最好不要相同。
      - 上述两个方法要么都重写要么都不重写。
   String toString() - 用于返回调用对象的字符串表示形式。
      - 返回的字符串内容有：包名.类名@哈希码的十六进制形式。
      - 当使用system.out.println()打印引用或者使用+拼接字符串时，会自动调用toString
      - 若希望改变toString()方法原有的功能，则应该去重写该方法。

作业：
   1.复习和总结面向对象的所有内容，要求画出重点知识点的流程图。
   2.面向对象部分重点代码至少敲3遍。
   














1.编程题
  编程实现Student类的封装，属性有：学号和姓名，行为有：打印所有属性的方法。

2.编程题
  编程实现Singleton类的实现，分别使用饿汉式和懒汉式实现。
----------------------------------------------------------------------------------
今天内容：
   (1)继承
   (2)访问控制
   (3)final关键字
   (4)对象创建的执行过程
   (5)多态

1.继承(重中之重)
人类：
   属性：姓名、年龄
   行为：吃饭、娱乐
学生类 继承 人类：
   属性：学号
   行为：学习
教师类 继承 人类：
   属性：薪水
   行为：讲课
工人类 继承 人类：
   属性：工号
   行为：工作

1.1 继承的由来
   当多个类中拥有相同的成员变量和成员方法时，若每个类中都独立编写一份则会造成代码的冗余，此时可以将这多个类中相同的内容提取出来组成一个新类，让这个多个类继承新类即可，从而实现了代码的复用，提高代码了可维护性。

1.2 基本概念
   继承就是指吸收现有类中已有的成员变量和成员方法，而在新编写的类中只需要写上独有的成员变量和成员方法的方式。
   在java语言中使用extends关键字表达继承的关系。
如：
   class Student extends Person{ ... ... }
   其中Person类叫做 父类/超类/基类。
   其中Student类叫做 子类/派生类。

1.3 注意事项
  (1)子类会继承父类中成员变量，包括私有成员变量。
     子类不可以继承父类中的构造方法和私有成员方法。
  (2)无论采用何种形式构造子类的对象，都会自动调用父类的无参构造方法来进行父类中
     成员变量的初始化工作，相当于增加代码：super();
  (3)在java语言中只支持单继承，不支持多继承，也就是一个子类只能有一个父类，但一个
     父类可以有多个子类。
  (4)继承不能随便使用，必须满足以下逻辑关系：
      子类 is a 父类。

1.4 super关键字和this关键字(熟悉)
(1)基本概念
   this关键字可以用于代表本类的一个对象。
   super关键字可以用于代表父类的一个对象。

(2)使用方式
   使用this.的方式可以访问本类中的成员变量和成员方法。
   使用super.的方式可以访问父类中的成员变量和成员方法。

   使用this(实参)的方式可以调用本类的其他构造方法。
   使用super(实参)的方式可以调用父类的构造方法。

要求大家掌握的用法：
   a.使用this.的方式可以区分成员变量名和局部变量名。
   b.使用super(实参)的方式可以调用父类的构造方法。
   c.使用super.的方式可以调用父类中被重写过的方法。

注意：
   this()和super()的使用都要求在构造方法的第一行，因此不能同时出现，若构造方法中两种形式都没有写，则编译器自动添加super()。

1.5 方法的重写(Override)
(1)基本概念
   当从父类中继承下来的方法不足以满足子类的需求时，此时就需要在子类中重新写一个和父类中功能等一样的方法，该方法就叫做对父类中方法的重写/覆盖。   

(2)使用原则
   a.要求方法名相同、参数列表相同、返回值类型也相同，从jdk1.5开始，允许返回子类类型
   b.访问权限不能变小，可以相同也可以变大。
   c.不能抛出更大的异常。

注意：
   静态的方法重写以后还是静态的。

练习：
   自定义Pet类，属性有：姓名和年龄，行为有：打印所有属性的方法，实现该类的封装。
   自定义Dog类继承自Pet类，属性有：花色，行为有：打印所有属性的方法，实现该类的封装
   自定义TestDog类，在main()方法中使用有参构造方法构造Dog类的对象，并打印属性值。         
2.访问控制(熟悉)
2.1 常用的访问控制符
  public - 表示公开的/公有的
  protected - 表示保护的
  默认访问符 - 表示默认的访问权限
  private   - 表示私有的

2.2 访问控制符的比较
  访问控制符  访问权限  本类的内部  本包中的其他类  子类的内部   其他包中其他类
----------------------------------------------------------------------------------
  public      公开的       ok            ok             ok            ok
  protected   保护的       ok            ok             ok            no
  默认访问符  默认的       ok            ok             no            no
  private     私有的       ok            no             no            no 

要求掌握的内容：
   a.public修饰的内容在任何位置都可以访问。
   b.private修饰的内容只能在本类的内部访问。
   c.通常情况下，成员变量都用private修饰，成员方法都用public修饰。

2.3 包的定义
   package 包名;
   package 包名1.包名2....;

   使用包的意义在于：便于管理，以及避免类名同名造成的冲突。

3.final关键字(重点)
3.1 基本概念
  final本意"最终的，不可更改的"，可以修饰类、成员方法、成员变量。

3.2 使用方式
  使用final关键字修饰类体现在该类不能被继承。
      - 用于防止滥用继承，如：System类、String类。
  使用final关键字修饰成员方法体现在该方法不能被重写。
      - 用于防止不经意间造成方法的重写，如：SimpleDateFormat类中的format()方法。
  使用final关键字修饰成员变量体现在该成员变量必须初始化且不能更改。
      - 用于防止修改成员变量的数值，如：Thread类中的MAX_PRIORITY。

补充：
   在java语言中单独使用static和final关键字的场合比较少，通常情况下使用public static final共同修饰成员变量表示常量的概念，也就是该常量的数值必须有而且不能更改，并且隶属于类层级对外公开。
   常量的命名规范通常为：每个字母都要大写，不同单词之间使用下划线连接。
如：
   public static final double PI = 3.14;

4.对象创建的过程(尽量理解，观察一下程序的执行流程)
4.1 单个对象创建的过程
  (1)首先将类的代码读取到内存中，这个过程叫做类的加载。
  (2)当new对象的时候去堆区分配内存空间，若成员变量没有指定初始值，则采用默认初始
     化方式，若指定初始值，则采用指定值初始化。 
  (3)执行构造块，可以更改成员变量的数值。
  (4)执行构造方法体，可以更改成员变量的数值。
  (5)此时对象构造完毕，继续执行后续的代码。

4.2 子类对象创建的过程
  (1)首先加载父类的代码，因此执行父类的静态语句块。
  (2)加载子类的代码，执行子类的静态语句块。
  (3)当new子类的对象时，子类的对象中包含父类的对象，因此先构造父类的对象。
  (4)执行父类的构造块，再执行父类的构造方法体。
  (5)执行子类的构造块，再执行子类的构造方法体。
  (6)此时子类对象构造完毕，继续执行后续的代码。

作业：
  1.编程题
     自定义矩形类，成员变量主要有：横坐标、纵坐标、长度、宽度，成员方法有：
   打印所有成员变量的方法，实现矩形类的封装。
     自定义圆形类，成员变量主要有：横坐标、纵坐标、半径，成员方法有：打印
   所有成员变量的方法，实现圆形类的封装。
     自定义测试类，在main()方法中分别创建矩形和圆形的对象，去调用各自的方法。





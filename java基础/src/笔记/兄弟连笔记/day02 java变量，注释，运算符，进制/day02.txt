1.编程题
  编程实现HelloWorld.java中的所有代码。

作业：
-----------------------------------------------------------------------------  今天内容：
   (1)java语言的特性
   (2)变量和注释
   (3)数据类型
   (4)运算符 

1.java语言的特性(记住)
1.1 编写java程序的流程
   (1)新建一个文本文档(记事本)，将该文件名命名为xxx.java。
   (2)使用文本文档的方式打开该文件，编写java语言的代码并保存。
   (3)使用javac xxx.java进行代码的编译，生成.class为后缀的字节码文件。
   (4)使用java xxx进行解释并执行，打印程序的结果。

1.2 主要特性
   (1)java语言是一门纯面向对象的编程语言。
   (2)java语言编写的代码具有跨平台特性，也就是说使用javac将java代码翻译成
      字节码文件之后，由于不同的操作系统中都拥有不同的java虚拟机分别进行解释，       从而可以得到不同平台的机器码，因此得到了"一次编译，到处运行"的美名。
   (3)java虚拟机拥有自动垃圾回收机制，也就是内存空间的释放。

2.变量和注释(重点)
2.1 基本概念
   变量本质上就是指在内存中申请的一块区域，该区域中的数据内容可以发生改变。
   当需要在程序中保存/记录单个数据时，就需要声明一个变量来记录。
   根据存放的数据内容不同所需要的内存空间大小也就不同，在java中使用变量的数据类型加以描述，而该内存空间的地址使用变量名加以描述。

2.2 变量的声明
   数据类型 变量名 = 初始值;   - 其中= 初始值是可以省略的，但分号不可以省略。
如：
   int age = 18;  - 推荐使用该方式
   int age;   

2.3 使用变量的注意事项
  (1)变量必须先声明再使用，否则编译报错：找不到符号。
  (2)变量在使用之前必须进行初始化，也就是指定初始值，否则编译报错：
     可能尚未初始化。 
  (3)不能多次声明同名的变量，否则编译报错。
  (4)每个变量都拥有独立的作用域和生命周期(了解)。

扩展：
  在方法体中声明的变量叫做局部变量，局部变量的作用域和生命周期都是在整个方法的方法体中，当然是从声明变量的位置开始。

2.4 标识符(变量名)的命名规则
  (1)由字母、数字、下划线以及美元$组成，如：age  age2 user_name等。
  (2)变量名推荐使用字母和数字的组合，其中数字不能开头，如：11L。
  (3)名字不能与java中的关键字/保留字同名，如：public class等。
  (4)可以使用汉字，但不推荐使用。
  (5)长度没有明确的限制，但不宜过长，尽量做到见名知意，如：time、name等。
   
扩展：
   标识符可以给 变量/类/成员变量/成员方法/包 等进行命名。

2.5 java编程的常见规范
  (1)编程代码过程中尽量使用空行、空格以及缩进，从而提到代码的可读性。
  (2)当类名由多个单词组成时，每个单词的首字母都要大写。
  (3)当变量名由多个单词组成时，从第二个单词起每个单词的首字母大写。
  (4)变量名尽量做到见名知意，区分大小写，如：day Day代表不同的变量。
     
2.6 常用的注释
   // - 单行注释，表示从//开始一直到本行的末尾都是注释的内容。
   /**/ - 多行注释，表示从/*开始一直到*/结尾，之间的所有内容都表示注释内容。

注意：
　 其中多行注释是不允许嵌套的，如：/*  /* */ */是错误的   

3.数据类型
3.1 数据类型的基本分类
  在java中数据类型主要分为两大类：基本数据类型 + 引用数据类型。
  其中基本数据类型主要有(8种)：
     byte/short/int/long类型是用于描述整数数据的，如：66。
     float/double类型是用于描述小数数据的，如：3.14。
     boolean类型是用于描述真假信息的，如：true 和 false。
     char类型是用于描述单个字符数据的，如：'a'。
  其中引用数据类型主要有：
     数组、类、接口以及枚举等。

3.2 常用的进制
  目前主流的进制有：十进制、二进制、八进制以及十六进制。
  其中十进制就是指逢十进一，也就是说每个数字的权重都是：10的次方，10^0、10^1等
  其中二进制就是指逢二进一，也就是说每个数字的权重都是：2的次方，2^0、2^1等
  其中八进制就是指逢八进一，也就是说每个数字的权重都是：8的次方，8^0、8^1等
  其中十六进制就是指逢十六进一，每个数字的权重个都是：16的次方，16^0、16^1等

  在计算机的底层只认识0和1组成的二进制序列，使用二进制的最高位(最左边)来代表符号位，其中0代表非负数，1代表负数。

3.3 进制之间的转换
(1)十进制和二进制之间的转换(重点)
   a.正十进制转换为二进制的方式  
     1)除2取余法，也就是让十进制整数不断地除以2并记录余数，当商为0时停止除法，
       将余数逆序排列即可得到二进制结果。
     2)拆分法，也就是将十进制整数拆分为多个二进制权重的和，将8位二进制的权重
       依次排开，若有该权重则在下面写1，否则在下面写0。
   如：
      66 = 64 + 2;
      128  64  32  16  8   4   2   1
       0    1   0   0  0   0   1   0

   b.正二进制转换为十进制的方式
     1)加权法，也就是说让二进制的每个数字乘以当前位的权重，再将乘积累加起来。
   如：
     0100 0010 => 0*2^0 + 1*2^1 + 0*2^2 + 0*2^3 + 0*2^4 + 0*2^5 +1*2^6 + 0*2^7
               => 0 + 2 + 0 + 0 + 0 + 0 + 64 + 0
               => 66
   c.负十进制转换为二进制的方式
     1)先将该整数的绝对值转换为二进制，然后进行按位取反再加1.
   如：
     -66
     66 => 0100 0010  绝对值转换为二进制
        => 1011 1101  按位取反
        => 1011 1110

    1011 1101                66 + -66 = 0;   0100 0010
   +        1                              + 1011 1110
-------------------                        -------------------
    1011 1110                              1 0000 0000    最高位1溢出

   d.负二进制转换为十进制的方式
     1)按位取反再加1，转换为十进制整数之后，添加负号。
   如：
     1011 1110 => 0100 0001  按位取反
               => 0100 0010  再加1
               => 66         转换为十进制整数
               => -66        添加负号

扩展：
   查询原码、反码以及补码的概念。

练习：
   -45 和 45 转换为二进制
   0101 0011 和 0001 1101 转换为十进制(正)
   1011 1101 和 1101 0011 转换为十进制(负)
解析：
   -45 转换为二进制的结果是：1101 0011
    45 转换为二进制的结果是：0010 1101
  
   0101 0011 转换为十进制结果是：83 
   0001 1101 转换为十进制结果是：29
  
   1011 1101 转换为十进制结果是：-67
   1101 0011 转换为十进制结果是：-45

(2)二进制和八进制之间的转换(熟悉)
   a.二进制转换为八进制的方式
     1)将每三位二进制转换为一位八进制，在转换结果的最前面增加0表示八进制
    如：
       010 001  => 021
   b.八进制转换为二进制的方式
     1)将每一位八进制转换为三位二进制，在转换结果的最前面增加0b表二进制              (从jdk1.7开始增加的新特性)
    如：
       021 => 0b010 001

(3)二进制和十六进制之间的转换(熟悉)
   a.二进制转换为十六进制的方式
     1)将每四位二进制转换为一位十六进制，在转换结果的最前面增加0x表示十六进制
    如：
       0010 1101 => 0x2d (在十六进制中使用a ~ f来表示 10 ~ 15之间的数字)
   b.十六进制转换为二进制的方式
     1)将每一位十六进制转换为四位二进制，在转换结果的最前面增加0b表示二进制
    如：
       0x2d => 0b0010 1101

3.4 单个字节表示的整数范围(重中之重)
   在计算机的底层都是二进制的序列，使用最高位代表二进制的符号位，1代表负数，使用0代表非负数，而单个字节是由八位二进制组成。
   非负数的表示范围是：0000 0000 ~ 0111 1111 => 0 ~ 127 => 0 ~ 2^7-1
      0000 0000 转换为十进制的结果是：0
      0111 1111 转换为十进制的结果是：
         1*2^0 + 1*2^1 + 1*2^2 + 1*2^3 + 1*2^4 + 1*2^5 + 1*2^6
       =>1 + 2 + 4 + 8 + 16 + 32 + 64
       =>127 
   负数的表示范围是：1000 0000 ~ 1111 1111 => -128 ~ -1 => -2^7 ~ -2^0
      1000 0000 转换为十进制的结果是：-128
         0111 1111(按位取反) => 1000 0000(再加1) => 128(转换为十进制) => -128
      1111 1111 转换为十进制的结果是：-1
         0000 0000(按位取反) => 0000 0001(再加1) => 1(转换为十进制) => -1

综上所述：
   对于单个字节的二进制位来说，所能表示十进制范围是：-128 ~ 127 => -2^7~2^7-1

3.5 整数类型(重点)
  在java语言中用于描述整数数据的关键字有：byte/short/int/long，推荐使用int类型
  其中byte类型在内存空间占1个字节，表示的范围是：-128 ~ 127 => -2^7 ~ 2^7-1
  其中short类型在内存空间占2个字节，表示的范围是：-2^15 ~ 2^15-1  
                                                  -32768 ~ 32767 
  其中int类型在内存空间中占4个字节，表示的范围是：-2^31 ~ 2^31-1(正负二十一亿)
  其中long类型在内存空间中占8个字节，表示的范围是：-2^63 ~ 2^63-1
                                                   (比int类型还大的数)
  在程序中直接写出的整数数据叫做直接量/字面值/常量，这些数据默认是int类型，当直接量的数据内容超过int的范围时，则在直接量的后面增加l或者L，推荐使用L，表示该直接量是long类型的数据。

扩展：
  当long类型的范围也不足以描述时，可以使用java.math.BigInteger类型加以描述。
  
3.6 浮点类型(重点)
  在java语言中用于描述小数数据的关键字有：float 和 double，推荐使用double类型
  其中float类型叫做单精度浮点数，在内存空间占4个字节。
  其中double类型叫做双精度浮点数，也就是比float更加准确，在内存空间中占8个字节 
   
  在程序中直接写出的小数叫做直接量/字面值/常量，这些数据默认是double类型，若希望表达float类型的直接量，则需要在直接量的后面增加f或者F。
  
扩展：
  double类型和float类型是不能实现精确计算的，为了解决该问题可以使用java.math.BigDecimal类型加以描述。

3.7 布尔类型(重点)
  在java语言中用于描述真假信息的关键字有：boolean类型。
  该类型的数值只有两种：true 和false，通常认为给类型在内存中占1个字节。

3.8 字符类型(熟悉)
  在java语言中用于描述单个字符的关键字有：char类型，如：'a' '1' '中'
  其中char类型在内存空间中占2个字节，使用单引号括起来的单个字符。
  现实生活中使用更多的是多个字符组成的字符串，字符串使用String类型加以描述，使用双引号括起来的内容，如："hello"。
  
  为了使得字符能够有效地存放于计算机中，通常都是将字符对应的编号保存起来，这种编号的表达方式叫做字符的ASCII。
  要求大家记住的ASCII主要有：
      'a' - 97   'A' - 65  '0' - 48  空格 - 32  换行 - 10
  常见的转义字符有(记住)：
      \" - 表示打印"
      \' - 表示打印'
      \\ - 表示打印\
      \t - 表示制表符，相当于按下了tab键。
      \n - 表示换行符
 
作业：
   1.将变量输入输出的代码敲上至少5遍。
   2.思考题：
     设计一套砝码要求能称量出1 ~ 100g之间的任意重量，请问至少需要多少个砝码？       以及每个砝码各自的重量是多少？  
   3.编程题:
     要求用户输入下落时间t，并按照公式 0.5*9.8*t*t来计算下落的位移并打印出来。
   4.编程题(选做)：
     要求提示用户输入一个整数类型的秒数，拆分为时分秒并打印出来。
         + 加法  - 减法  * 乘法  / 除法  % 取余 
     如：3666  => 1:1:6






 


     
1.编程题
  自定义Person类实现该类的封装，属性有：姓名和年龄，行为有：打印所有属性的方法。
  自定义Student类继承自Person类实现封装，属性有：学号，行为有：打印所有属性的方法。

作业：
---------------------------------------------------------------------------------
今天内容：
   (1)多态
   (2)抽象类
   (3)接口
   (4)内部类
   (5)Object类

1.多态(重中之重)
1.1 基本概念
  多态就是指同一种事物表现出来的多种形态。
  宠物：猫、狗、鸟、蜗牛、小强等
  饮料：可乐、雪碧、加多宝、乐虎、果啤等。
  整数：byte b1 = 10;  short s1 = 10; int i1 = 10;等
  ... ...

1.2 语法格式
  父类类型 引用名 = new 子类类型();
如：
  Person p = new Student();
  p.show();
  在编译阶段p是Person类型的，只能调用Person类中的show()方法；在运行阶段p指向的是Student类型的对象，因此最终调用Student类自己的show()方法。

1.3 多态的效果
  (1)父类的引用可以直接访问父类中成员变量和成员方法。
  (2)父类的引用不可以直接访问子类中的成员。
  (3)对于非静态的方法来说，父类的引用最终调用子类中重写以后的版本。
     对于静态的方法来说，父类的引用最终调用父类自己的方法。

1.4 引用类型之间的转换
  (1)子类类型向父类类型转换只需要自动类型转换即可。
     父类类型向子类类型转换则需要强制类型转换，强制类型转换的语法格式：
         子类类型 引用名 = (子类类型)父类引用名
  (2)引用类型之间的转换必须发生在父子类之间，否则编译报错。
  (3)若拥有父子类关系则编译阶段转换不会报错，但父类引用转换的类型若不是该引用真正
     指向的类型，则在运行阶段产生类型转换异常。
  (4)为了避免上述错误的发生，则应该在每次类型转换之前先进行条件的判断，方式如下：
     if(引用变量名 instanceof 子类类型){}
     上述代码用于判断引用指向的对象是否为指定的子类类型，若是则返回true，否则false

练习：     
     自定义矩形类，成员变量主要有：横坐标、纵坐标、长度、宽度，成员方法有：
   打印所有成员变量的方法，实现矩形类的封装。
     自定义圆形类，成员变量主要有：横坐标、纵坐标、半径，成员方法有：打印
   所有成员变量的方法，实现圆形类的封装。
     自定义测试类，在main()方法中分别创建矩形和圆形的对象，去调用各自的方法。
     
1.5 多态的作用
   多态的作用在于可以屏蔽不同子类之间的差异实现通用的编程，而带来不同的结果。

2.抽象类(重点)
2.1 抽象方法
   抽象方法就是指无法具体实现的方法，使用abstract关键字修饰，该方法没有方法体。
   访问控制 abstract 返回值类型 方法名(形参列表);
如：
   public abstract void cry();

2.2 抽象类
   抽象类就是指使用abstract关键字修饰的类，体现在该类是不能实例化对象。

2.3 注意事项
   (1)抽象类可以有成员变量、成员方法以及构造方法。
   (2)抽象类中可以有抽象方法，也可以没有抽象方法。
   (3)拥有抽象方法的类必须是抽象类，因此很多资料强调拥有抽象方法并使用abstract
      关键字的类才是真正的抽象类。

2.4 实际意义
   抽象类的意义不在于实例化对象，而在于被继承，可以实现对子类的强制性和规范性。
   由于子类的方法是参考抽象类的抽象方法而实现的，因此这种编程思想叫做模板设计模式。

经验：
   在以后的开发中推荐使用父类引用指向子类对象的形式，因为这种情况下，使用父类引用直接调用的方法通常都是父类已有的方法，当该父类拥有多个子类时，若后期需要更换子类类型，只需要将new关键字后面的类型修改一下，其他所有内容都不用改变，从而提高代码可维护性

3.接口(重点)
3.1 基本概念
  接口本质上就是一种比抽象类还抽象的类，主要体现在所有的方法都是抽象方法，没有构造
  定义类的关键字是class，定义接口的关键字是interface。
  继承类的关键字是extends，实现接口的关键字是implements。

3.2 注意事项
  (1)接口中的所有成员变量都必须由public static final共同修饰，也就是常量。
  (2)接口中的所有成员方法都必须由public abstract共同修饰。

3.3 类和接口之间的关系
   类和类之间采用继承关系     使用extends关键字      支持单继承
   类和接口之间采用实现关系   使用implements关键字   支持多实现
   接口和接口之间采用继承关系 使用extends关键字      通常认为支持单继承

3.4 接口和抽象类的主要区别(笔试题)
  (1)定义抽象类使用class关键字，定义接口使用interface关键字。
  (2)继承抽象类使用extends关键字，实现接口使用implements关键字。
  (3)继承抽象类支持单继承，实现接口可以多实现。
  (4)抽象类中可以有构造方法，而接口中没有。
  (5)接口中所有的成员变量都是常量，都必须是public static final共同修饰。
  (6)接口中所有的成员方法都是由public abstract共同修饰。
  (7)接口中增加方法一定会影响到实现类，而抽象类可以不影响。

作业：
  1.编程题 
    自定义狗类，属性有：名字、重量，牙齿数量，行为有：吃食物、看家。
    自定义猫类，属性有：名字、重量、颜色，行为有：吃食物、抓老鼠。
    自定义抽象动物类描述狗类和猫类的相同成员，其中吃食物设计为抽象方法。
    自定义测试类，包含一个main方法，在main方法中使用多态的语法去调用各个方法。

   










  